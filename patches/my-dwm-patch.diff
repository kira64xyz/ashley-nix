diff --git a/config.def.h b/config.def.h
index 1c0b587..02cd0a7 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,25 +1,29 @@
 /* See LICENSE file for copyright and license details. */
-
+#include <X11/XF86keysym.h>
+#define PrintScreenDWM      0x0000ff61
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
+static const char *fonts[]          = { "Inconsolata Nerd Font:size=10" };
+static const char dmenufont[]       = "Inconsolata Nerd Font:size=10";
+static const char col_gray1[]       = "#1d1f21";
 static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char col_border[]      = "#50a2af";
+static const char col_cyan[]        = "#256083";
+static const char col_gray3[]       = "#c5c8c6";
+static const char col_gray4[]       = "#c5c8c6";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm] = { col_gray4, col_gray1, col_gray2 },
+	[SchemeSel]  = { col_gray1, col_border,  col_border  },
+	[SchemeTitle]  = { col_gray4, col_cyan,  col_border  },
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+//static const char *tags[] = { "ter", "fil", "nix", "cht", "mus", "vms", "ssh", "psw", "www" };
+static const char *tags[] = { "", "", "", "", "", "", "ﯲ", "", "" };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -36,11 +40,14 @@ static const float mfact     = 0.55; /* factor of master area size [0.05..0.95]
 static const int nmaster     = 1;    /* number of clients in master area */
 static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
 
+#include "fibonacci.c"
 static const Layout layouts[] = {
 	/* symbol     arrange function */
+	{ "[\\]",      dwindle },
+	{ "[M]",      monocle },
+	{ "[@]",      spiral },
 	{ "[]=",      tile },    /* first entry is default */
 	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
 };
 
 /* key definitions */
@@ -56,13 +63,33 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, "-p", "run:", NULL };
+static const char *termcmd[]  = { "st", "-e", "tmux", NULL };
+static const char *lightupd[] = { "brightnessctl", "s", "+5%", NULL };
+static const char *lightdownd[] = { "brightnessctl", "s", "5%-", NULL };
+static const char *upvol[] = { "amixer", "sset", "Master", "5%+", NULL };
+static const char *downvol[] = { "amixer", "sset", "Master", "5%-", NULL };
+static const char *mutevol[] = { "amixer", "sset", "Master", "toggle", NULL };
+static const char *mutemic[] = { "amixer", "sset", "Capture", "toggle", NULL };
+static const char *kaomoji[] = { "kaomoji_dmenu", NULL };
+static const char *scrn[] = { "screenshot", NULL };
+static const char *power[] = { "power.sh", NULL };
+
+static const char *killx[] = { "pkill", "xinit", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ 0,                            XF86XK_MonBrightnessUp, spawn,     {.v = lightupd } },
+	{ 0,                            XF86XK_MonBrightnessDown, spawn,   {.v = lightdownd } },
+	{ 0,                       	XF86XK_AudioLowerVolume, spawn, {.v = downvol} },
+  	{ 0,                       	XF86XK_AudioMicMute, spawn, {.v = mutemic} },
+	{ 0,                            XF86XK_AudioMute, spawn, {.v = mutevol} },
+	{ 0,                       	XF86XK_AudioRaiseVolume, spawn, {.v = upvol} },
+	{ 0,                            PrintScreenDWM,      spawn,          {.v = scrn } },
+	{ MODKEY|ShiftMask,             XK_k,      spawn,                    { .v = kaomoji } },
+	{ MODKEY|ShiftMask,             XK_e,      spawn,                    { .v = power } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
@@ -76,6 +103,8 @@ static Key keys[] = {
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[3]} },
+	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
@@ -94,6 +123,7 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_Delete,  spawn,         {.v = killx } },
 };
 
 /* button definitions */
